// === –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ===
let token = localStorage.getItem("token");
let role = localStorage.getItem("role");

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
async function updateUI() {
  const authSection = document.getElementById("auth-section");
  const logoutSection = document.getElementById("logout-section");

  if (token) {
    if (authSection) authSection.style.display = "none";
    if (logoutSection) logoutSection.style.display = "block";

    try {
      const res = await fetch("/profile", {
        headers: { Authorization: `Bearer ${token}` },
      });
      const data = await res.json();

      if (!data || data.error) {
        logout();
        return;
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å (–µ—Å–ª–∏ –æ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
      role = data.role;
      localStorage.setItem("role", role);

      const profileInfo = document.getElementById("profile-info");
      if (profileInfo) {
        let badge = "";
        if (role === "admin") badge = "üëë";
        else if (role === "developer") badge = "üíé";

        profileInfo.innerHTML = `
          <div>
            <img src="${data.avatar}" alt="avatar" class="avatar">
            <p><strong>${data.username}</strong> ${badge}</p>
            <p>${data.about || "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è"}</p>
            ${
              role === "admin"
                ? '<a href="admin.html" class="admin-btn">–ü–µ—Ä–µ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∫—É</a>'
                : role === "developer"
                ? '<a href="developer.html" class="admin-btn">–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–±–∏–Ω–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ üíé</a>'
                : '<a href="cabinet.html" class="user-btn">–ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</a>'
            }
          </div>
        `;
      }
    } catch {
      logout();
    }
  } else {
    if (authSection) authSection.style.display = "block";
    if (logoutSection) logoutSection.style.display = "none";
  }
}

// –í—ã—Ö–æ–¥
function logout() {
  localStorage.removeItem("token");
  localStorage.removeItem("role");
  localStorage.removeItem("email");
  token = null;
  role = null;
  const authSection = document.getElementById("auth-section");
  const logoutSection = document.getElementById("logout-section");
  if (authSection) authSection.style.display = "block";
  if (logoutSection) logoutSection.style.display = "none";
}

// === –í—Ö–æ–¥ ===
document.getElementById("login-btn")?.addEventListener("click", (e) => {
  e.preventDefault();
  const email = document.getElementById("login-email").value.trim();
  const password = document.getElementById("login-password").value.trim();

  if (!email || !password) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");

  fetch("/login", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ email, password }),
  })
    .then((res) => res.json())
    .then(async (data) => {
      if (data.token) {
        localStorage.setItem("token", data.token);
        localStorage.setItem("role", data.role);
        localStorage.setItem("email", email);
        token = data.token;
        role = data.role;

        await updateUI();

        if (role === "admin") {
          alert("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä üëë");
          window.location.href = "admin.html";
        } else if (role === "developer") {
          alert("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ üíé");
          window.location.href = "developer.html";
        } else {
          alert("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
          window.location.href = "cabinet.html";
        }
      } else {
        alert("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: " + (data.error || "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"));
      }
    })
    .catch(() => alert("–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
});

// === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ===
document.getElementById("register-btn")?.addEventListener("click", (e) => {
  e.preventDefault();
  const username = document.getElementById("register-username").value.trim();
  const email = document.getElementById("register-email").value.trim();
  const password = document.getElementById("register-password").value.trim();

  if (!username || !email || !password) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");

  fetch("/register", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ username, email, password }),
  })
    .then((res) => res.json())
    .then((data) => {
      if (data.success) {
        alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –í–æ–π–¥–∏—Ç–µ.");
      } else {
        alert("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + (data.error || "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"));
      }
    })
    .catch(() => alert("–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
});

// === –í—ã—Ö–æ–¥ ===
document.getElementById("logout-btn")?.addEventListener("click", () => logout());

// === –î–æ–Ω–∞—Ç PayPal (–ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã) ===
async function handleDonation(orderID, amount = 10) {
  try {
    const res = await fetch("/capture-order", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${localStorage.getItem("token")}`,
      },
      body: JSON.stringify({ orderID, days: 30, amount }),
    });
    const data = await res.json();

    if (data.status === "COMPLETED") {
      alert("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!");

      await updateUI();

      if (role === "developer") {
        window.location.href = "developer.html";
      } else {
        window.location.reload();
      }
    } else {
      alert("–û–ø–ª–∞—Ç–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
    }
  } catch {
    alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞");
  }
}

// === –õ–µ—Ç—É—á–∞—è –º—ã—à—å ü¶á ===
const bat = document.getElementById("flying-bat");
const batMessage = document.getElementById("bat-message");

const batMessages = [
  "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç—ë–º–Ω—ã–π –º–∏—Ä!",
  "–Ø —Ç—É—Ç –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ª–µ—Ç–∞—é ü¶á",
  "–û—Å—Ç–æ—Ä–æ–∂–Ω–æ... —è –Ω–∞–±–ª—é–¥–∞—é –∑–∞ —Ç–æ–±–æ–π üëÄ",
  "–¢—ã —Å–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω–æ –≤—ã–≥–ª—è–¥–∏—à—å!",
  "–ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–≤—ã–µ —Ä–∞–∑–¥–µ–ª—ã!",
  "–ü—Å—Å... —Ç–∞–º —Å–∫–∏–¥–∫–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ!",
  "–ï—Å–ª–∏ –±–æ–∏—à—å—Å—è ‚Äî –∂–º–∏ –Ω–∞ –∫–æ—à–∫—É üêà‚Äç‚¨õ",
];

function moveBat() {
  if (!bat) return;
  const x = Math.random() * (window.innerWidth - 80);
  const y = Math.random() * (window.innerHeight - 80);
  bat.style.left = `${x}px`;
  bat.style.top = `${y}px`;
}
setInterval(moveBat, 4000);

bat?.addEventListener("click", () => {
  if (!batMessage) return;
  const msg = batMessages[Math.floor(Math.random() * batMessages.length)];
  batMessage.textContent = msg;
  batMessage.style.left = bat.style.left;
  batMessage.style.top = `calc(${bat.style.top} - 40px)`;
  batMessage.style.display = "block";
  batMessage.style.opacity = 1;
  setTimeout(() => (batMessage.style.display = "none"), 2500);
});

// === –ö–æ—à–∫–∞ üêà‚Äç‚¨õ ===
const catWidget = document.getElementById("cat-widget");
const contactFormContainer = document.getElementById("contact-form-container");
const contactForm = document.getElementById("contact-form");
const closeContact = document.getElementById("close-contact");

catWidget?.addEventListener("click", () => {
  if (!contactFormContainer) return;
  contactFormContainer.style.display =
    contactFormContainer.style.display === "block" ? "none" : "block";
});

closeContact?.addEventListener("click", () => {
  if (contactFormContainer) contactFormContainer.style.display = "none";
});

contactForm?.addEventListener("submit", (e) => {
  e.preventDefault();
  const email = document.getElementById("contact-email").value.trim();
  const message = document.getElementById("contact-message").value.trim();

  if (!email || !message) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");

  fetch("/contact", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ email, message }),
  })
    .then((res) => res.json())
    .then((data) => {
      alert(data.success ? "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!" : "–û—à–∏–±–∫–∞: " + data.error);
      if (data.success) contactFormContainer.style.display = "none";
    })
    .catch(() => alert("–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"));
});

// === –ì–∞–ª–µ—Ä–µ—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ ===
const imagesGallery = [
  { src: "images/pic1.jpg", title: "–¢—ë–º–Ω—ã–π –ª–µ—Å", desc: "–ú–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ç—å–º–∞ –∏ —Å–≤–µ—Ç –ª—É–Ω—ã." },
  { src: "images/pic2.jpg", title: "–ö–æ—Å–º–æ—Å", desc: "–ù–µ–æ–Ω–æ–≤–∞—è –≥–∞–ª–∞–∫—Ç–∏–∫–∞ üåå" },
  { src: "images/pic3.jpg", title: "–í–µ–¥—å–º–∞", desc: "–°–∏–ª—É—ç—Ç—ã –º–∞–≥–∏–∏ –≤ –Ω–æ—á–∏." },
  { src: "images/pic4.jpg", title: "–ó–∞–º–æ–∫", desc: "–î—Ä–µ–≤–Ω–∏–µ —Ä—É–∏–Ω—ã –Ω–∞ —É—Ç—ë—Å–µ." }
];

function loadImagesGallery() {
  const container = document.getElementById("images-gallery");
  if (!container) return;
  container.innerHTML = imagesGallery.map(img => `
    <div class="card">
      <img src="${img.src}" alt="${img.title}">
      <h3>${img.title}</h3>
      <p>${img.desc}</p>
    </div>
  `).join("");
}

// === –ó–∞–ø—É—Å–∫ ===
document.addEventListener("DOMContentLoaded", () => {
  updateUI();
  loadImagesGallery();
});
