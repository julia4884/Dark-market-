document.addEventListener("DOMContentLoaded", () => {
  const token = localStorage.getItem("token");
  const role = localStorage.getItem("role");
  
  if (token) {
    showProfile();
  }

  // === –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ===
  document.getElementById("login-btn").onclick = async () => {
    const email = document.getElementById("login-email").value;
    const password = document.getElementById("login-password").value;
    const res = await fetch("/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, password }),
    });
    const data = await res.json();
    if (data.token) {
      localStorage.setItem("token", data.token);
      localStorage.setItem("role", data.role);
      showProfile();
    } else {
      alert(data.error || "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞");
    }
  };

  // === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ===
  document.getElementById("register-btn").onclick = async () => {
    const username = document.getElementById("register-username").value;
    const email = document.getElementById("register-email").value;
    const password = document.getElementById("register-password").value;
    const res = await fetch("/register", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username, email, password }),
    });
    const data = await res.json();
    if (data.success) {
      alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!");
    } else {
      alert(data.error || "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
    }
  };

  // === –í—ã—Ö–æ–¥ ===
  document.getElementById("logout-btn").onclick = () => {
    localStorage.clear();
    location.reload();
  };

  // === –ü–æ–∫–∞–∑ –ø—Ä–æ—Ñ–∏–ª—è ===
  async function showProfile() {
    const res = await fetch("/profile", {
      headers: { Authorization: "Bearer " + localStorage.getItem("token") },
    });
    const data = await res.json();
    if (data.username) {
      document.getElementById("auth-section").style.display = "none";
      document.getElementById("logout-section").style.display = "block";
      document.getElementById("profile-info").innerHTML = `
        <p><img src="/${data.avatar}" alt="avatar" width="60"> 
        ${data.username} ${data.role === "admin" ? "üëë" : ""}</p>
        <p>${data.about || "–û —Å–µ–±–µ –ø–æ–∫–∞ –ø—É—Å—Ç–æ"}</p>`;
    }
  }

  // === –õ–µ—Ç—É—á–∞—è –º—ã—à—å ===
  const bat = document.getElementById("bat");
  const batMsg = document.getElementById("bat-message");
  const messages = [
    "–Ø –ª–µ—á—É –Ω–∞–¥ —Ç–æ–±–æ–π!",
    "–¢–µ–º–Ω–æ—Ç–∞ –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º...",
    "–ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –¥–æ–Ω–∞—Ç üòâ",
    "ü¶á –Ø —Ç–≤–æ–π –Ω–æ—á–Ω–æ–π —Å—Ç—Ä–∞–∂!",
    "–ë–µ—Ä–µ–≥–∏ —Å–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫..."
  ];

  function moveBat() {
    bat.style.top = Math.random() * 80 + "%";
    bat.style.left = Math.random() * 80 + "%";
  }
  setInterval(moveBat, 4000);

  bat.addEventListener("click", () => {
    const msg = messages[Math.floor(Math.random() * messages.length)];
    batMsg.textContent = msg;
    batMsg.style.display = "block";
    setTimeout(() => batMsg.style.display = "none", 3000);
  });

  // === –ö–æ—à–∫–∞ ===
  const catWidget = document.getElementById("cat-widget");
  const contactForm = document.getElementById("contact-form-container");
  const closeContact = document.getElementById("close-contact");

  catWidget.addEventListener("click", () => {
    contactForm.classList.toggle("hidden");
  });
  closeContact.addEventListener("click", () => {
    contactForm.classList.add("hidden");
  });

  document.getElementById("contact-form").onsubmit = async (e) => {
    e.preventDefault();
    const email = document.getElementById("contact-email").value;
    const message = document.getElementById("contact-message").value;

    const res = await fetch("/contact", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, message }),
    });
    const data = await res.json();
    if (data.success) {
      alert("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
      contactForm.classList.add("hidden");
    } else {
      alert("–û—à–∏–±–∫–∞: " + (data.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å"));
    }
  };
});
