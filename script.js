// üìå config.js –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å API_URL, –Ω–∞–ø—Ä–∏–º–µ—Ä:
// const API_URL = "http://localhost:3000";

document.addEventListener("DOMContentLoaded", () => {
    // --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ---
    const registerForm = document.getElementById("registerForm");
    if (registerForm) {
        registerForm.addEventListener("submit", async (e) => {
            e.preventDefault();
            const email = document.getElementById("email").value;
            const password = document.getElementById("password").value;
            const username = document.getElementById("username").value;

            try {
                const response = await fetch(`${API_URL}/register`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ email, password, username })
                });

                const data = await response.json();

                if (data.success) {
                    document.getElementById("registerMessage").innerText = "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!";
                } else {
                    document.getElementById("registerMessage").innerText = `‚ùå –û—à–∏–±–∫–∞: ${data.error}`;
                }
            } catch (err) {
                document.getElementById("registerMessage").innerText = "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.";
            }
        });
    }

    // --- –õ–æ–≥–∏–Ω ---
    const loginForm = document.getElementById("loginForm");
    if (loginForm) {
        loginForm.addEventListener("submit", async (e) => {
            e.preventDefault();
            const email = document.getElementById("loginEmail").value;
            const password = document.getElementById("loginPassword").value;

            try {
                const response = await fetch(`${API_URL}/login`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();

                if (data.success && data.token) {
                    localStorage.setItem("token", data.token);
                    window.location.href = "home.html";
                } else {
                    document.getElementById("loginMessage").innerText = `‚ùå –û—à–∏–±–∫–∞: ${data.error || "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å"}`;
                }
            } catch (err) {
                document.getElementById("loginMessage").innerText = "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.";
            }
        });
    }

    // --- –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç ---
    if (window.location.pathname.includes("home.html")) {
        const token = localStorage.getItem("token");
        if (!token) {
            window.location.href = "index.html";
            return;
        }

        (async () => {
            try {
                const response = await fetch(`${API_URL}/profile`, {
                    method: "GET",
                    headers: { "Authorization": "Bearer " + token }
                });

                const user = await response.json();

                if (user.success) {
                    document.getElementById("nickname").innerText = user.username;
                    document.getElementById("status").innerText = user.role;
                    document.getElementById("subscription").innerText = user.subscription ? "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" : "‚ùå –ù–µ—Ç";
                    if (user.photo) document.getElementById("profile-photo").src = user.photo;
                    if (user.about) document.getElementById("aboutMe").value = user.about;
                } else {
                    localStorage.removeItem("token");
                    window.location.href = "index.html";
                }
            } catch (err) {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:", err);
                localStorage.removeItem("token");
                window.location.href = "index.html";
            }
        })();

        // –í—ã—Ö–æ–¥
        document.getElementById("logoutBtn").addEventListener("click", () => {
            localStorage.removeItem("token");
            window.location.href = "index.html";
        });

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ "–û —Å–µ–±–µ"
        document.getElementById("saveAboutBtn").addEventListener("click", async () => {
            const about = document.getElementById("aboutMe").value;

            try {
                const response = await fetch(`${API_URL}/profile/update`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": "Bearer " + localStorage.getItem("token")
                    },
                    body: JSON.stringify({ about })
                });

                const data = await response.json();
                if (data.success) {
                    alert("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!");
                } else {
                    alert("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: " + data.error);
                }
            } catch (err) {
                alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.");
            }
        });

        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ
        document.getElementById("savePhotoBtn").addEventListener("click", async () => {
            const fileInput = document.getElementById("photoUpload");
            if (!fileInput.files.length) return alert("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª!");

            const formData = new FormData();
            formData.append("photo", fileInput.files[0]);

            try {
                const response = await fetch(`${API_URL}/profile/photo`, {
                    method: "POST",
                    headers: {
                        "Authorization": "Bearer " + localStorage.getItem("token")
                    },
                    body: formData
                });

                const data = await response.json();
                if (data.success) {
                    document.getElementById("profile-photo").src = data.photo;
                    alert("‚úÖ –§–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!");
                } else {
                    alert("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ: " + data.error);
                }
            } catch (err) {
                alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.");
            }
        });
    }
});
